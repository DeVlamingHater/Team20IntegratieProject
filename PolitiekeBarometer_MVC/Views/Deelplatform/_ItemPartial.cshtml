@model IList<Domain.Element>

@{
    ViewBag.Title = "_ItemPartial";
}
<div class="card">
    <div class="card-header">
        <i class="fa fa-bar-chart"></i> Grafiek
    </div>
    <div class="card-body">
        <canvas class="Chart"></canvas>
    </div>
    <div class="card-footer small text-muted">

        <div id="@ViewBag.grafiekButtons" class="float-right" style="display:inline">
            <div id="menuIcons" class="float-left" style="visibility:hidden">
                <button id="iconEdit" class="btn btn-default" data-toggle="modal" data-target="#@ViewBag.edit"><i class="fa fa-edit"></i></button>
                @if (Request.IsAuthenticated)
                {
                    if (ViewBag.page != "dashboard")
                    {
                        <button id="iconDashboard" class="btn btn-default" data-toggle="modal" data-target="#@ViewBag.dash" onclick="iconDashboardFunction(this)"><i class="fa fa-save"></i></button>
                    }
                    <button id="iconAlert" class="btn btn-default" data-toggle="modal" data-target="#@ViewBag.alert"><i class="fa fa-bell"></i></button>
                    if (ViewBag.page == "dashboard")
                    {
                        <button id="iconVerwijder" class="btn btn-danger" data-toggle="modal" data-target="#@ViewBag.delete"><i class="fa fa-close"></i></button>
                    }
                }
            </div>
            <button id="btnMenu" class="btn btn-default" style="margin-left:3px" onclick="menuFunction(this)"><i id="iconMenu" class="fa fa-bars"></i></button>
        </div>

    </div>
</div>
<div class="modal fade" id="@ViewBag.delete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Bent u zeker dat u de grafiek wil verwijderen?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="align-self:center">
                <button class="btn btn-default" type="button" data-dismiss="modal">Annuleer</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" data-toggle="modal" onclick="deleteGrafiek(this)">Verwijder</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="@ViewBag.alert" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Alert instellen</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="align-self:center">
                <p>Ik wil een alert ontvangen als:</p>
                <select id="alertSelect" class="form-control" onchange="alertSelect(this)">
                    <option value="aantal">het aantal berichten over en/of van </option>
                    <option value="trend">de trend van </option>
                </select>
                <br />
                <form>
                    <div id="stijgtRadio" class="radio">
                        <label><input type="radio" name="optradio"> Stijgt met <input id="stijgtPercentage" type="number" class="small" name="quantity">%</label>
                    </div>
                    <div id="daaltRadio" class="radio">
                        <label><input type="radio" name="optradio"> Daalt met <input id="daaltPercentage" type="number" class="small" name="quantity">%</label>
                    </div>
                    <div id="positiefRadio" class="radio">
                        <label><input type="radio" name="optradio"> positiever wordt met <input id="posPercentage" type="number" class="small" name="quantity">%</label>
                    </div>
                    <div id="negatiefRadio" class="radio">
                        <label><input type="radio" name="optradio"> negatiever wordt met <input id="negPercentage" type="number" class="small" name="quantity">%</label>
                    </div>
                </form>
                <br />
                <p>Ik wil een melding ontvangen via: </p>
                <form>
                    <div class="checkbox">
                        <label><input id="browsermelding" type="checkbox" name="optradio"> de website</label>
                    </div>
                    <div class="checkbox">
                        <label><input id="mailmelding" type="checkbox" name="optradio"> mail</label>
                    </div>
                    <div class="checkbox">
                        <label><input id="appmelding" type="checkbox" name="optradio"> de app</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" type="button" data-dismiss="modal">Annuleer</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" data-toggle="modal" onclick="saveAlert(this)">Save</button>
            </div>
        </div>>
    </div>
</div>
<div class="modal fade" id="@ViewBag.dash" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Grafiek opslaan op je dashboard</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="align-self:center">
                <label for="zones">Kies je zone op het dashboard</label>
                <select id="zones" class="form-control" style="position:static">
                    <option>Test</option>
                </select>
                <br>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" type="button" data-dismiss="modal">Annuleer</button>
                <button id="saveGrafiek" type="button" class="btn btn-primary" data-dismiss="modal" data-toggle="modal" onclick="saveGrafiek(this)">Save</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="@ViewBag.edit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Grafiek bewerken</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="align-self:center">
                <label for="begin">Van:</label><input class="form-control" type="date" id="begin" value="@ViewBag.startDatum">

                <label for="einde">Tot:</label><input class="form-control" type="date" id="einde" value="@ViewBag.eindDatum">
                <p>start: @ViewBag.starDatum</p>
                <p>eind: @ViewBag.eindDatum</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" type="button" data-dismiss="modal">Annuleer</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" data-toggle="modal" onclick="editGrafiek(this)">Bewerk</button>
            </div>
        </div>
    </div>
</div>
*@section scripts{
    <script type="text/javascript">
        $(document).ready(function ()
        {
            $("#searchString").keyup(function () {
                var searchtekst = document.getElementById("searchString").value;
                var f = {};
                f.url = '@Url.Action("Search", "Home")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ searchstring: searchtekst });
                f.contentType = "application/json";
                f.success = function (response) {
                    searchFunction(response)
                };
                    //f.error = function (response) {
                    //    alert("failed");
                //};
                $.ajax(f).
            });
        });

    </script>
}

<script>
    //menu openen
    var menuOpen = false;
    function menuFunction(el) {
        //alert("menu")
        var test = el.parentElement;
        //var test = document.getElementById('@ViewBag.grafiekButtons');
        var menuIcons = test.children[0];
        var btnMenu = test.children[1];
        var iconMenu = btnMenu.children[0];
        if (menuOpen == false) {
            iconMenu.style.transform = "rotate(90deg)";
            btnMenu.setAttribute("class", "btn btn-secondary");
            menuIcons.style.visibility = 'visible';
            menuOpen = true;
        } else {
            iconMenu.style.transform = "none";
            btnMenu.setAttribute("class", "btn btn-default");
            menuIcons.style.visibility = "hidden";
            menuOpen = false;
        };
    }
    // Verplaatsen naar dashboard
    function iconDashboardFunction(el) {
        //alert("iconDash " + el);
        var modal = el.parentElement.parentElement;
        //alert(modal.getAttribute("id"));
         var f = {};
                f.url = '@Url.Action("getZonesJson", "Home")';
                f.type = "POST";
                f.dataType = "json";
                f.contentType = "application/json";
                f.success = function (response) {
                    alert("succes json");
                    setZoneLijstFunction(response, modal);
                };
                //f.error = function (response) {
                //    alert("failed");
                //};
                $.ajax(f);
    }
    function setZoneLijstFunction(response, modal) {
        //alert("zones " + modal);
        var grafiek = modal.id;
        var grafiekindex = '';
        for (i = 0; i < grafiek.length; i++){
            if (isNaN(grafiek[i])==false) {
                grafiekindex = grafiekindex + grafiek[i];
            }
        };
        //alert("grafindex = " + grafiekindex);
        //alert("setLijst");
        var select = document.getElementById("zones");
        select.innerHTML = "";
        for (i = 0; i < response.length; i++) {
            alert("setlijst loop " + response);
            var option = document.createElement("option");
            var a = document.createElement("a");
            var link = "filterElement(\"" + response[i] + "\")";
            option.innerHTML = response[i];
            option.setAttribute("value", response[i]);
            select.appendChild(option);
        };
    }
    function saveGrafiek(el) {
        var parent = el.parentElement.parentElement.parentElement.parentElement;
        var grafiek = parent.id;
        for (i = 0; i < grafiek.length; i++) {
            if (isNaN(grafiek[i]) == false) {
                grafiekindex = grafiekindex + grafiek[i];
            }
        };
        var select = parent.children[0].children[0].children[1].children[1];
        alert(select.id);
             var zone = select.options[select.selectedIndex].value;
                var f = {};
                f.url = '@Url.Action("dashboardGrafiek", "Home")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ zone: zone, grafiekIndex: grafiekindex });
                f.contentType = "application/json";
                f.success = function (response) {
                    alert("grafiek opgeslagen");
                };
                f.error = function (response) {
                    alert("failed");
                };
                $.ajax(f);
    }

    // allert grafiek
    function alertSelect(el) {
        var option = el.options[el.selectedIndex].value
        var radioform = el.parentElement.children[3];
        var posRadio = radioform.children[2].children[0];
        var negRadio = radioform.children[3].children[0];
        if (option == 'trend') {

            posRadio.style.visibility = "hidden";
            negRadio.style.visibility = "hidden";
        } else {

            posRadio.style.visibility = "visible";
            negRadio.style.visibility = "visible";
        }
    }
    function saveAlert(el) {
        var parent = el.parentElement.parentElement.parentElement.parentElement;

        var grafiek = parent.id;
        for (i = 0; i < grafiek.length; i++) {
            if (isNaN(grafiek[i]) == false) {
                grafiekindex = grafiekindex + grafiek[i];
            }
        };
        var modalbody = parent.children[0].children[0].children[1];
        var alertselect = modalbody.children[1];
        var radioform = modalbody.children[3];
        var meldform = modalbody.children[6];
        var stijgtRadio = radioform.children[0].children[0].children[0];
        var stijgtPercent = radioform.children[0].children[0].children[1];
        var daaltRadio = radioform.children[1].children[0].children[0];
        var daaltPercent = radioform.children[1].children[0].children[1];
        var posRadio = radioform.children[2].children[0].children[0];
        var posPercent = radioform.children[2].children[0].children[1];
        var negRadio = radioform.children[3].children[0].children[0];
        var negPercent = radioform.children[3].children[0].children[1];
        var browser = meldform.children[0].children[0].children[0].checked;
        var mail = meldform.children[1].children[0].children[0].checked;
        var app = meldform.children[2].children[0].children[0].checked;


        var option = alertselect.options[alertselect.selectedIndex].value;
        var selectedRadio = "";
        var percentage = 0;

        if (stijgtRadio.checked == true) {
            percentage = stijgtPercent.value;
            selectedRadio = "stijgt";
        } else if (daaltRadio.checked == true) {
            percentage = daaltPercent.value;
            selectedRadio = "daalt";
        } else if (posRadio.checked == true) {
            percentage = posPercent.value;
            selectedRadio = "pos";
        } else if (negRadio.checked == true) {
            percentage = negPercent.value;
            selectedRadio = "neg";
        } else {
            alert("foutje");
        };
        //tot hier in orde
        var f = {};
                f.url = '@Url.Action("addAlert", "Home")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ id: grafiekindex, percentage: percentage, radio: selectedRadio, soort: option, browser: browser, mail: mail, app: app });
                f.contentType = "application/json";
                f.success = function (response) {
                    alert("alert opgeslagen");
                };
                f.error = function (response) {
                    alert("failed");
                };
                $.ajax(f);
    }

    //verwijder grafiek
    function deleteGrafiek(el) {
        var parent = el.parentElement.parentElement.parentElement.parentElement;
        var grafiek = parent.id;
        for (i = 0; i < grafiek.length; i++) {
            if (isNaN(grafiek[i]) == false) {
                grafiekindex = grafiekindex + grafiek[i];
            }
        };
        var f = {};
                f.url = '@Url.Action("deleteGrafiek", "Home")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ grafiekIndex: grafiekindex });
                f.contentType = "application/json";
                f.success = function (response) {
                    alert("grafiek verwijderd");
                };
                f.error = function (response) {
                    alert("failed");
                };
                $.ajax(f);
    }

    //edit grafiek
    function editGrafiek(el) {
        var parent = el.parentElement.parentElement.parentElement.parentElement;
        var grafiek = parent.id;
        for (i = 0; i < grafiek.length; i++) {
            if (isNaN(grafiek[i]) == false) {
                grafiekindex = grafiekindex + grafiek[i];
            }
        };
        var f={};
        f.url = '@Url.Action("editGrafiek", "Home")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ grafiekIndex: grafiekindex });
                f.contentType = "application/json";
                f.success = function (response) {
                    alert("grafiek gewijzigd");
                };
                f.error = function (response) {
                    alert("failed");
                };
                $.ajax(f);
    }
</script>
<script>
        document.addEventListener('DOMContentLoaded', function () {
        var grafiekType = @ViewBag.GrafiekType;
        var grafiekIndex = @ViewBag.GrafiekIndex;
        var labels = '@(ViewBag.Labels)';
        var labelArray = labels.split(".");
        var data = '@(ViewBag.Data)';
        var dataArray = data.split(".");
        var floatArray = [];
        for (var i = 0; i < dataArray.length; i++) {
            floatArray[i] = parseFloat(dataArray[i].replace(",","."));
        }
            if (grafiekType == 0) {
                LijnGrafiek();
            } else if (grafiekType == 1) {
                BarChart();
            } else {
                PieChart();
            }
            function LijnGrafiek() {
                var ctx = document.getElementsByClassName("Chart")[grafiekIndex];
            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labelArray,
                    datasets: [{
                        label: "Sessions",
                        lineTension: 0.3,
                        backgroundColor: "rgba(2,117,216,0.2)",
                        borderColor: "rgba(2,117,216,1)",
                        pointRadius: 5,
                        pointBackgroundColor: "rgba(2,117,216,1)",
                        pointBorderColor: "rgba(255,255,255,0.8)",
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(2,117,216,1)",
                        pointHitRadius: 20,
                        pointBorderWidth: 2,
                        data: floatArray,
                    }],
                },
                options: {
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'date'
                            },
                            gridLines: {
                                display: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                max: 120,
                                maxTicksLimit: 5
                            },
                            gridLines: {
                                color: "rgba(0, 0, 0, .125)",
                            }
                        }],
                    },
                    legend: {
                        display: false
                    }
                }
                });

            }

            function BarChart() {
                var ctx = document.getElementsByClassName("Chart")[grafiekIndex];
                var myLineChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labelArray,
                        datasets: [{
                            label: "Trending",
                            backgroundColor: "rgba(2,117,216,1)",
                            borderColor: "rgba(2,117,216,1)",
                            data: floatArray,
                        }],
                    },
                    options: {
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'month'
                                },
                                gridLines: {
                                    display: false
                                },
                                ticks: {
                                    maxTicksLimit: 6
                                }
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: 1.2,
                                    maxTicksLimit: 10
                                },
                                gridLines: {
                                    display: true
                                }
                            }],
                        },
                        legend: {
                            display: true
                        }
                    }
                });
            }
            function PieChart() {
                var ctx = document.getElementsByClassName("Chart")[grafiekIndex];
                var myPieChart = new Chart(ctx, {
                 type: 'pie',
                 data: {
                     labels: labelArray,
                     datasets: [{
                         data: floatArray,
                backgroundColor: ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6',
                    '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',
                    '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A',
                    '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',
                    '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC',
                    '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',
                    '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',
                    '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',
                    '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3',
                    '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'],
            }],
        },
    });
            }
    }, false);
</script>