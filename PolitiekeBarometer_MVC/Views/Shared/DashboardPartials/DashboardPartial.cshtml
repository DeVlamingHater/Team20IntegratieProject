@model Domain.Dashboards.Dashboard

@{
    ViewBag.Title = "Dashboard";
}
<div class="tab">
    @foreach (var zone in Model.Zones)
    {
        <div>
            <button class="tablinks" onclick="loadZone(@zone.Id)">
                @zone.Naam
            </button>
            @Html.ActionLink("x", "DeleteZone", new { zoneId = zone.Id }, new { @class = "btn btn-outline-secondary" })
        </div>

    }
    <div>
        <button onclick="location.href='@Url.Action("CreateZone", "Dashboard")'">
            +
        </button>
    </div>

</div>
<div id="itemContainer">
    @foreach (var zone in Model.Zones)
    {
        if (zone.Items != null)
        {
            <div class="tab-content bg-light">
                <div id="@zone.Id" class="tab-pane" style="display:none">
                    <h3>@Html.Partial("DashboardPartials/ItemsPartial", zone.Items)</h3>
                </div>
            </div>
        }
        <div id="@zone.Id" class="tab-content bg-light" style="display:none">
            <h3> @zone.Id</h3>
        </div>
    }
</div>

<script>
    function openCity(zoneId) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(zoneId).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>

<style>
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        .tab * {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
        }
        /* Style the buttons that are used to open the tab content */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }


            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }
</style>