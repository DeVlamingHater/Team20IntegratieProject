@model Domain.Alert
@{
    ViewBag.Title = "CreateAlert";
}

<h2>CreateAlert</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Alert</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group dropdown">
        <div class="form-inline">
            <input type="text" class="form-control" id="searchBar" onkeyup="dropList()" />
            <button id="searchbutton" onclick="searchFunction()" class="btn btn-primary"><i class="fa fa-search"></i></button>
        </div>
        <ul class="list-group dropdown-menu" id="searchlist" style="margin:auto;width:90%;display:none"></ul>
        <ul class="list-group" id="selectedList" style="style=" margin:auto;width:90%;display:none""></ul>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailMelding, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.EmailMelding)
                @Html.ValidationMessageFor(model => model.EmailMelding, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrowserMelding, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.BrowserMelding)
                @Html.ValidationMessageFor(model => model.BrowserMelding, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicatieMelding, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ApplicatieMelding)
                @Html.ValidationMessageFor(model => model.ApplicatieMelding, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Age")
        <div class="form-group">
            <input type="radio" name="Age" value="Positief"> Geen filter
            <input type="radio" name="Age" value="Positief"> +25j
            <input type="radio" name="Age" value="Negatief"> -25j<br>
        </div>
        @Html.Label("Sentiment")
        <div class="form-group">
            <input type="radio" name="Sentiment" value="Positief"> Geen filter
            <input type="radio" name="Sentiment" value="Positief"> Positief
            <input type="radio" name="Sentiment" value="Negatief"> Negatief<br>
        </div>
        @Html.Label("Retweet")
        <div class="form-group">
            <input type="radio" name="Retweet" value="Positief"> Geen filter
            <input type="radio" name="Retweet" value="Positief"> Enkel Retweets
            <input type="radio" name="Retweet" value="Negatief"> Geen Retweets<br>
        </div>
    </div>
</div>
}

@section scripts {
    <script type="text/javascript">
     $(document).ready(function () {
         $("#searchBar").keyup(function () {
             //alert("json");
            var searchtekst = document.getElementById("searchBar").value;
                var f = {};
                f.url = '@Url.Action("Search", "Home")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ searchstring: searchtekst });
                f.contentType = "application/json";
                f.success = function (response) {
                   // alert("succes json"+response);
                    searchElementFunction(response);
                };
                //f.error = function (response) {
                //    alert("failed");
                //};
                $.ajax(f);
          });
        });

        function searchElementFunction(response) {
            var ul = document.getElementById("searchList");
            ul.innerHTML = "";
            for (i = 0; i < response.length; i++) {

                var li = document.createElement("li");
                var a = document.createElement("a");
                var link = "filterElement(\"" + response[i] + "\")";
                a.innerHTML = response[i];
                a.setAttribute("id", response[i]);
                li.setAttribute("onclick", link);
                a.setAttribute("class", "btn");
                li.setAttribute("class", "dropdown-item");
                ul.appendChild(li);
                li.appendChild(a);
            };
        }

        function filterElement(elementNaam) {
            alert(elementNaam);
            var ul = document.getElementById("searchSelected");
            var li = document.createElement("li");
            li.innerHTML = elementNaam;
            ul.appendChild(li);

        }

        function dropElementList() {
            //alert("droplist");
            var ul = document.getElementById("searchElementList");
            var search = document.getElementById("searchElement").value;
            if (search == "" || ul.children.length == 0) {
                ul.style.display = "none";
            } else {
                ul.style.display = "block";
            };
        }
    </script>
}
