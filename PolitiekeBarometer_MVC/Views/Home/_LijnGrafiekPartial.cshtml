@model IList<Domain.Element>

@{
    ViewBag.Title = "_LijnGrafiekPartial";
}
<!-- Example Bar Chart Card-->
<div class="card mb-3">
    <div class="card-header">
        <i class="fa fa-bar-chart"></i> Line Chart Example
    </div>
    <div class="card-body">
        <canvas class="MyLineChart" width="100" height="50"></canvas>
    </div>
    <div class="card-footer small text-muted">
        <div class="float-right" style="display:inline">
            <div id="menuIcons" class="float-left" style="visibility:hidden">
                <button href="@Url.Action("bewerkGrafiek")" class="btn btn-default"><i class="fa fa-edit"></i></button>
                <button href="@Url.Action("saveGrafiek")" class="btn btn-default"><i class="fa fa-save"></i></button>
                <button href="@Url.Action("maakAlert")" class="btn btn-default"><i class="fa fa-bell"></i></button>
            </div>
            <button class="btn btn-default" style="margin-left:3px" onclick="menuFunction()"><i id="menu" class="fa fa-bars"></i></button>
        </div>
    </div>
</div>
<script>
    var open = false;
    function menuFunction() {
        var menu = document.getElementById("menu")
        if (open == false) {
            menu.className = "fa fa-close";
            document.getElementById("menuIcons").style.visibility = 'visible';
            open = true;
        } else {
            menu.className = "fa fa-bars";
            document.getElementById("menuIcons").style.visibility = "hidden";
            open = false;
        }
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var namen = [];
    namen = @Html.Raw(Json.Encode(ViewBag.Namen));
    var trends = [];
    trends = @Html.Raw(Json.Encode(ViewBag.Trending));
    var ctx = document.getElementsByClassName("MyLineChart")[@ViewBag.Index];
            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: namen,
                    datasets: [{
                        label: "Sessions",
                        lineTension: 0.3,
                        backgroundColor: "rgba(2,117,216,0.2)",
                        borderColor: "rgba(2,117,216,1)",
                        pointRadius: 5,
                        pointBackgroundColor: "rgba(2,117,216,1)",
                        pointBorderColor: "rgba(255,255,255,0.8)",
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(2,117,216,1)",
                        pointHitRadius: 20,
                        pointBorderWidth: 2,
                        data: trends,
                    }],
                },
                options: {
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'date'
                            },
                            gridLines: {
                                display: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                max: 50,
                                maxTicksLimit: 5
                            },
                            gridLines: {
                                color: "rgba(0, 0, 0, .125)",
                            }
                        }],
                    },
                    legend: {
                        display: false
                    }
                }
            });
    }, false);
</script>
